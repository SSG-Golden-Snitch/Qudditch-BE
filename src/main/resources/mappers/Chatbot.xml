<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goldensnitch.qudditch.mapper.ChatbotMapper">

    <!--상품의 가격을 물어보는 챗봇-->
    <select id="price" resultType="Chatbot" parameterType="String">
        SELECT name, price
        FROM product
        WHERE name like concat('%',#{productName},'%')
    </select>

    <select id="selectNearProductStores" parameterType="map" resultType="Store">
        SELECT s.name, s.address
        FROM store s
                 JOIN user_store us on s.id = us.store_id
        WHERE us.id in (SELECT user_store_id
                        FROM product p
                                 JOIN store_stock ss on p.id = ss.product_id
                        WHERE p.name like concat('%', #{productName}, '%'))
        ORDER BY (6371
            *ACOS(COS(RADIANS(#{currentWgs84X}))
                      *COS(RADIANS(s.wgs84_x))
                      *COS(radians(s.wgs84_y)-RADIANS(#{currentWgs84Y}))
                +SIN(RADIANS(#{currentWgs84X}))*SIN(RADIANS(s.wgs84_x))))
        limit 3
    </select>

    <select id="selectSimilarProductNames" parameterType="String" resultType="String">
        SELECT name
        FROM product
        WHERE name like concat('%', #{productName}, '%')
    </select>

    <select id="random" parameterType="String" resultType="Chatbot">
        SELECT name, price
        FROM product
        ORDER BY RAND()
        LIMIT 3;
    </select>

    <select id="best" resultType="Chatbot" parameterType="String">
        SELECT concat(p.brand, ' ', p.name) name, p.price
        FROM store_stock_report s
                 JOIN product p ON s.product_id = p.id
        ORDER BY s.out_qty DESC
        LIMIT 5;

    </select>


    <select id="selectNearStores" parameterType="map" resultType="Store">
        SELECT name, address
        FROM store
        ORDER BY (6371
            *ACOS(COS(RADIANS(#{currentWgs84X}))
                      *COS(RADIANS(store.wgs84_x))
                      *COS(radians(store.wgs84_y)-RADIANS(#{currentWgs84Y}))
                +SIN(RADIANS(#{currentWgs84X}))*SIN(RADIANS(wgs84_x))))
        limit 5;
    </select>

    <!--검색한 상품이 있는 가게 리스트 챗봇-->
    <!--<select id="store" resultType="ChatbotStore" parameterType="String">
        select s.name
        from store s
                 Join user_store u ON s.id = u.store_id
        where u.id =any(select ss.user_store_id
                        from product p
                                 Join store_stock ss ON p.id = ss.product_id
                        where p.name like concat('%',#{name},'%'));
    </select>-->

</mapper>