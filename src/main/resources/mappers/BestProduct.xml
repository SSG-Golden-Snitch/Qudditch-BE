<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goldensnitch.qudditch.mapper.BestProductMapper">

    <!-- 가게별 베스트 판매상품 TOP5 -->
    <select id="BestProduct" resultType="BestProduct" parameterType="Integer">
        SELECT concat(p.brand, ' ', p.name) name, ssr.out_qty
        # Id 가 null 일 경우 전체 가게의 베스트 상품을 조회
        <if test="Id != null">
            FROM user_store us
            JOIN store_stock_report ssr ON us.id = ssr.user_store_id
            JOIN product p ON ssr.product_id = p.id
            WHERE us.id = #{Id}
        </if>
        <if test="Id == null">
            FROM store_stock_report ssr
            JOIN product p ON ssr.product_id = p.id
        </if>
        ORDER BY ssr.out_qty DESC
        LIMIT 5;
    </select>

    <select id="bestProductByAge">
        SELECT age_range,
               CONCAT(p.brand, ' ', p.name) AS name,
               qty                          AS max_qty
        FROM (SELECT u.age_range,
                     cop.product_id,
                     SUM(cop.qty)                                                            AS qty,
                     ROW_NUMBER() OVER (PARTITION BY u.age_range ORDER BY SUM(cop.qty) DESC) AS row_num
              FROM user_persona AS u
                       JOIN
                   customer_order AS co ON u.user_customer_id = co.user_customer_id
                       JOIN
                   customer_order_product AS cop ON co.id = cop.customer_order_id
              GROUP BY u.age_range,
                       cop.product_id) AS ranked_products
                 INNER JOIN product AS p ON ranked_products.product_id = p.id
        WHERE row_num = 1;
    </select>

    <select id="bestProductByGender">
        SELECT gender,
               CONCAT(p.brand, ' ', p.name) AS name,
               qty                          AS max_qty
        FROM (SELECT u.gender,
                     cop.product_id,
                     SUM(cop.qty)                                                         AS qty,
                     ROW_NUMBER() OVER (PARTITION BY u.gender ORDER BY SUM(cop.qty) DESC) AS row_num
              FROM user_persona AS u
                       JOIN
                   customer_order AS co ON u.user_customer_id = co.user_customer_id
                       JOIN
                   customer_order_product AS cop ON co.id = cop.customer_order_id
              GROUP BY u.gender,
                       cop.product_id) AS ranked_products
                 INNER JOIN product AS p ON ranked_products.product_id = p.id
        WHERE row_num = 1;
    </select>
</mapper>