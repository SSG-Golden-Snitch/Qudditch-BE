<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goldensnitch.qudditch.mapper.UserCustomerMapper">

    <insert id="insertUserCustomer" parameterType="com.goldensnitch.qudditch.model.UserCustomer">
        INSERT INTO user_customer (
            email, password, name, state, verificationCode,
            collectionArn, createdAt, modifiedAt
        ) VALUES (
            #{email}, #{password}, #{name}, #{state}, #{verificationCode},
            #{collectionArn}, #{createdAt}, #{modifiedAt}
        )
    </insert>
    
    <!-- select쿼리 -->
    <!-- ID로 특정 사용자 조회 -->
    <select id="selectUserById" parameterType="int" resultType="com.goldensnitch.qudditch.model.UserCustomer">
        select * from user_customer where id = #{id}
    </select>
    <!-- 이메일로 특정 사용자 조회 -->
    <select id="selectUserByEmail" parameterType="String" resultType="com.goldensnitch.qudditch.model.UserCustomer">
        select * from user_customer where email = #{email}
    </select>
    <!-- 전체 사용자 조회 -->
    <select id="selectAllUsers" resultType="com.goldensnitch.qudditch.model.UserCustomer">
        select * from user_customer
    </select>

    <!-- update쿼리 -->
    <!-- 사용자 정보 업데이트 -->
    <update id="updateUser" parameterType="com.goldensnitch.qudditch.model.UserCustomer">
        update user_customer set 
            email = #{email},
            password = #{password},
            name = #{name},
            state = #{state},
            verficationCode = #{verificationCode},
            collectionArn = #{collectionArn},
            modifiedAt = #{modifiedAt}
        where id = #{id}
    </update>

    <!-- delete쿼리 -->
    <!-- 사용자 삭제 -->
    <delete id="deleteUser" parameterType="int">
        delete from user_customer where id = #{id}
    </delete>

    <!-- 조건부 검색 -->
    

    <!-- 집계 함수 -->

    <!-- JOIN연산 -->

</mapper>